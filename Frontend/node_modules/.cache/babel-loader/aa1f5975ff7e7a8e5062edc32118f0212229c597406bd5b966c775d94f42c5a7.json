{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhardwaj/Documents/AI_hack/repo/Frontend/src/AgentChat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FileText } from 'lucide-react';\n\n// --- STYLES (Unchanged) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatStyles = {\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#f0f2f5'\n  },\n  header: {\n    padding: '10px 20px',\n    background: '#fff',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    zIndex: 1,\n    borderBottom: '1px solid #ddd'\n  },\n  headerTitle: {\n    margin: 0,\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px'\n  },\n  backButton: {\n    background: '#e4e6eb',\n    border: 'none',\n    borderRadius: '20px',\n    padding: '8px 16px',\n    cursor: 'pointer',\n    fontWeight: '600'\n  },\n  chatLog: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  messageBubble: {\n    maxWidth: '70%',\n    padding: '10px 15px',\n    borderRadius: '18px',\n    marginBottom: '10px',\n    lineHeight: '1.4',\n    boxShadow: '0 1px 1px rgba(0,0,0,0.1)'\n  },\n  messageMeta: {\n    fontSize: '0.75rem',\n    color: '#65676b',\n    marginTop: '5px'\n  },\n  agent1: {\n    alignSelf: 'flex-start',\n    background: '#e4e6eb',\n    color: '#050505'\n  },\n  agent2: {\n    alignSelf: 'flex-end',\n    background: 'linear-gradient(135deg, #6a11cb, #2575fc)',\n    color: '#fff'\n  }\n};\n\n// --- Custom Hook for the typewriter effect ---\nconst useTypewriter = (text, speed = 5, onFinished) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const onFinishedRef = useRef(onFinished);\n  onFinishedRef.current = onFinished;\n  useEffect(() => {\n    if (!text) return;\n    setDisplayedText('');\n    let i = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText(text.slice(0, i + 1));\n      i++;\n      if (i > text.length) {\n        clearInterval(intervalId);\n        if (onFinishedRef.current) {\n          onFinishedRef.current();\n        }\n      }\n    }, speed);\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return displayedText;\n};\n\n// --- Child Component for a single message bubble ---\n_s(useTypewriter, \"fgfDT1VOKu83yYRDwKdYyYcDq+c=\");\nconst MessageBubble = ({\n  msg,\n  isTyping,\n  onFinishedTyping\n}) => {\n  _s2();\n  const isAgent1 = msg.sender === 'anya_agent';\n  // The hook is now only active if `isTyping` is true\n  const animatedText = useTypewriter(isTyping ? msg.message : '', 25, onFinishedTyping);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...chatStyles.messageBubble,\n      ...(isAgent1 ? chatStyles.agent1 : chatStyles.agent2)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: isTyping ? animatedText : msg.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...chatStyles.messageMeta,\n        color: isAgent1 ? '#65676b' : 'rgba(255,255,255,0.8)',\n        textAlign: isAgent1 ? 'left' : 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: msg.sender.replace('_', ' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \" - \", new Date(msg.timestamp).toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n// --- Main AgentChat Component (Corrected Logic) ---\n_s2(MessageBubble, \"rw/hZWHB52yoENpP+l53hcqrv+E=\", false, function () {\n  return [useTypewriter];\n});\n_c = MessageBubble;\nconst AgentChat = ({\n  onBack\n}) => {\n  _s3();\n  const [allMessages, setAllMessages] = useState([]);\n  const [displayedMessageCount, setDisplayedMessageCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    fetch('/conversation.json').then(response => {\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      return response.json();\n    }).then(data => {\n      setAllMessages(data.messages || []);\n      // Start with the first message after a short delay\n      setTimeout(() => setDisplayedMessageCount(1), 100);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(\"Failed to fetch conversation data:\", error);\n      setIsLoading(false);\n    });\n  }, []);\n\n  // Scroll to bottom when a new message is added to the display\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [displayedMessageCount]);\n  const handleTypingFinished = () => {\n    if (displayedMessageCount < allMessages.length) {\n      // Pause before showing the next message\n      setTimeout(() => {\n        setDisplayedMessageCount(prevCount => prevCount + 1);\n      }, 800); // 0.8-second pause between messages\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatStyles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: chatStyles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: chatStyles.headerTitle,\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          size: 24,\n          color: \"#6a11cb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), \"Agent Matchmaking Log\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: chatStyles.backButton,\n        onClick: onBack,\n        children: \"\\u2190 Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatStyles.chatLog,\n      ref: chatLogRef,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          alignSelf: 'center',\n          color: '#65676b'\n        },\n        children: \"Loading conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : allMessages.slice(0, displayedMessageCount).map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        msg: msg,\n        isTyping: index === displayedMessageCount - 1 // Only the last message is typing\n        ,\n        onFinishedTyping: handleTypingFinished\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s3(AgentChat, \"CU9B2rJFR3k0SNKvdVW5t3e5O3c=\");\n_c2 = AgentChat;\nexport default AgentChat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"AgentChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FileText","jsxDEV","_jsxDEV","chatStyles","container","width","height","display","flexDirection","background","header","padding","boxShadow","alignItems","justifyContent","zIndex","borderBottom","headerTitle","margin","fontSize","fontWeight","gap","backButton","border","borderRadius","cursor","chatLog","flexGrow","overflowY","messageBubble","maxWidth","marginBottom","lineHeight","messageMeta","color","marginTop","agent1","alignSelf","agent2","useTypewriter","text","speed","onFinished","_s","displayedText","setDisplayedText","onFinishedRef","current","i","intervalId","setInterval","slice","length","clearInterval","MessageBubble","msg","isTyping","onFinishedTyping","_s2","isAgent1","sender","animatedText","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","replace","Date","timestamp","toLocaleTimeString","_c","AgentChat","onBack","_s3","allMessages","setAllMessages","displayedMessageCount","setDisplayedMessageCount","isLoading","setIsLoading","chatLogRef","fetch","then","response","ok","Error","status","json","data","messages","setTimeout","catch","error","console","scrollTop","scrollHeight","handleTypingFinished","prevCount","size","onClick","ref","map","index","_c2","$RefreshReg$"],"sources":["/Users/ayushbhardwaj/Documents/AI_hack/repo/Frontend/src/AgentChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FileText } from 'lucide-react';\n\n// --- STYLES (Unchanged) ---\nconst chatStyles = {\n    container: { width: '100%', height: '100%', display: 'flex', flexDirection: 'column', background: '#f0f2f5' },\n    header: { padding: '10px 20px', background: '#fff', boxShadow: '0 2px 4px rgba(0,0,0,0.1)', display: 'flex', alignItems: 'center', justifyContent: 'space-between', zIndex: 1, borderBottom: '1px solid #ddd' },\n    headerTitle: { margin: 0, fontSize: '1.2rem', fontWeight: 'bold', display: 'flex', alignItems: 'center', gap: '10px' },\n    backButton: { background: '#e4e6eb', border: 'none', borderRadius: '20px', padding: '8px 16px', cursor: 'pointer', fontWeight: '600' },\n    chatLog: { flexGrow: 1, overflowY: 'auto', padding: '20px', display: 'flex', flexDirection: 'column' },\n    messageBubble: { maxWidth: '70%', padding: '10px 15px', borderRadius: '18px', marginBottom: '10px', lineHeight: '1.4', boxShadow: '0 1px 1px rgba(0,0,0,0.1)' },\n    messageMeta: { fontSize: '0.75rem', color: '#65676b', marginTop: '5px' },\n    agent1: { alignSelf: 'flex-start', background: '#e4e6eb', color: '#050505' },\n    agent2: { alignSelf: 'flex-end', background: 'linear-gradient(135deg, #6a11cb, #2575fc)', color: '#fff' }\n};\n\n// --- Custom Hook for the typewriter effect ---\nconst useTypewriter = (text, speed = 5, onFinished) => {\n    const [displayedText, setDisplayedText] = useState('');\n    const onFinishedRef = useRef(onFinished);\n    onFinishedRef.current = onFinished;\n\n    useEffect(() => {\n        if (!text) return;\n        setDisplayedText(''); \n        let i = 0;\n        const intervalId = setInterval(() => {\n            setDisplayedText(text.slice(0, i + 1));\n            i++;\n            if (i > text.length) {\n                clearInterval(intervalId);\n                if (onFinishedRef.current) {\n                    onFinishedRef.current();\n                }\n            }\n        }, speed);\n\n        return () => clearInterval(intervalId);\n    }, [text, speed]);\n\n    return displayedText;\n};\n\n// --- Child Component for a single message bubble ---\nconst MessageBubble = ({ msg, isTyping, onFinishedTyping }) => {\n    const isAgent1 = msg.sender === 'anya_agent';\n    // The hook is now only active if `isTyping` is true\n    const animatedText = useTypewriter(isTyping ? msg.message : '', 25, onFinishedTyping);\n\n    return (\n        <div style={{ ...chatStyles.messageBubble, ...(isAgent1 ? chatStyles.agent1 : chatStyles.agent2) }}>\n            <div>{isTyping ? animatedText : msg.message}</div>\n            <div style={{ ...chatStyles.messageMeta, color: isAgent1 ? '#65676b' : 'rgba(255,255,255,0.8)', textAlign: isAgent1 ? 'left' : 'right' }}>\n                <strong>{msg.sender.replace('_', ' ')}</strong> - {new Date(msg.timestamp).toLocaleTimeString()}\n            </div>\n        </div>\n    );\n};\n\n// --- Main AgentChat Component (Corrected Logic) ---\nconst AgentChat = ({ onBack }) => {\n    const [allMessages, setAllMessages] = useState([]);\n    const [displayedMessageCount, setDisplayedMessageCount] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const chatLogRef = useRef(null);\n\n    useEffect(() => {\n        fetch('/conversation.json')\n            .then(response => {\n                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                return response.json();\n            })\n            .then(data => {\n                setAllMessages(data.messages || []);\n                // Start with the first message after a short delay\n                setTimeout(() => setDisplayedMessageCount(1), 100); \n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error(\"Failed to fetch conversation data:\", error);\n                setIsLoading(false);\n            });\n    }, []);\n\n    // Scroll to bottom when a new message is added to the display\n    useEffect(() => {\n        if (chatLogRef.current) {\n            chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n        }\n    }, [displayedMessageCount]);\n\n    const handleTypingFinished = () => {\n        if (displayedMessageCount < allMessages.length) {\n            // Pause before showing the next message\n            setTimeout(() => {\n                setDisplayedMessageCount(prevCount => prevCount + 1);\n            }, 800); // 0.8-second pause between messages\n        }\n    };\n\n    return (\n        <div style={chatStyles.container}>\n            <header style={chatStyles.header}>\n                <h2 style={chatStyles.headerTitle}>\n                    <FileText size={24} color=\"#6a11cb\" />\n                    Agent Matchmaking Log\n                </h2>\n                <button style={chatStyles.backButton} onClick={onBack}>← Back to Matches</button>\n            </header>\n            <div style={chatStyles.chatLog} ref={chatLogRef}>\n                {isLoading ? (\n                    <p style={{ alignSelf: 'center', color: '#65676b' }}>Loading conversation...</p>\n                ) : (\n                    allMessages.slice(0, displayedMessageCount).map((msg, index) => (\n                        <MessageBubble\n                            key={index}\n                            msg={msg}\n                            isTyping={index === displayedMessageCount - 1} // Only the last message is typing\n                            onFinishedTyping={handleTypingFinished}\n                        />\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AgentChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}