{"ast":null,"code":"var _jsxFileName = \"/Users/ayushbhardwaj/Documents/AI_hack/repo/Frontend/src/AgentChat.js\",\n  _s = $RefreshSig$();\n// AgentChat.js (updated to read from TXT instead of JSON)\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FileText } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatStyles = {\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#f0f2f5'\n  },\n  header: {\n    padding: '10px 20px',\n    background: '#fff',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    zIndex: 1,\n    borderBottom: '1px solid #ddd'\n  },\n  headerTitle: {\n    margin: 0,\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '10px'\n  },\n  backButton: {\n    background: '#e4e6eb',\n    border: 'none',\n    borderRadius: '20px',\n    padding: '8px 16px',\n    cursor: 'pointer',\n    fontWeight: '600'\n  },\n  chatLog: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  messageBubble: {\n    maxWidth: '70%',\n    padding: '10px 15px',\n    borderRadius: '18px',\n    marginBottom: '10px',\n    lineHeight: '1.4',\n    boxShadow: '0 1px 1px rgba(0,0,0,0.1)'\n  },\n  messageMeta: {\n    fontSize: '0.75rem',\n    color: '#65676b',\n    marginTop: '5px'\n  },\n  agent1: {\n    alignSelf: 'flex-start',\n    background: '#e4e6eb',\n    color: '#050505'\n  },\n  agent2: {\n    alignSelf: 'flex-end',\n    background: 'linear-gradient(135deg, #6a11cb, #2575fc)',\n    color: '#fff'\n  }\n};\nconst AgentChat = ({\n  onBack\n}) => {\n  _s();\n  const [conversation, setConversation] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    const fetchChat = async () => {\n      try {\n        const res = await fetch('/chat_log.txt');\n        const text = await res.text();\n        setConversation(text);\n        setIsLoading(false);\n      } catch (err) {\n        console.error(\"Error loading chat log:\", err);\n        setIsLoading(false);\n      }\n    };\n    fetchChat();\n  }, []);\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatStyles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: chatStyles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: chatStyles.headerTitle,\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          size: 24,\n          color: \"#6a11cb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 52\n        }, this), \"Agent Matchmaking Log\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: chatStyles.backButton,\n        onClick: onBack,\n        children: \"\\u2190 Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatStyles.chatLog,\n      ref: chatLogRef,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : conversation.split('\\n').map((line, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...chatStyles.messageBubble,\n          ...(line.startsWith(\"user:\") ? chatStyles.agent2 : chatStyles.agent1)\n        },\n        children: line.replace(/^user:|^video_director:/, '')\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AgentChat, \"sDR7TTwkV3jCTROl7PpZw+a81O8=\");\n_c = AgentChat;\nexport default AgentChat;\nvar _c;\n$RefreshReg$(_c, \"AgentChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FileText","jsxDEV","_jsxDEV","chatStyles","container","width","height","display","flexDirection","background","header","padding","boxShadow","alignItems","justifyContent","zIndex","borderBottom","headerTitle","margin","fontSize","fontWeight","gap","backButton","border","borderRadius","cursor","chatLog","flexGrow","overflowY","messageBubble","maxWidth","marginBottom","lineHeight","messageMeta","color","marginTop","agent1","alignSelf","agent2","AgentChat","onBack","_s","conversation","setConversation","isLoading","setIsLoading","chatLogRef","fetchChat","res","fetch","text","err","console","error","current","scrollTop","scrollHeight","style","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","split","map","line","idx","startsWith","replace","_c","$RefreshReg$"],"sources":["/Users/ayushbhardwaj/Documents/AI_hack/repo/Frontend/src/AgentChat.js"],"sourcesContent":["// AgentChat.js (updated to read from TXT instead of JSON)\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FileText } from 'lucide-react';\n\nconst chatStyles = {\n    container: { width: '100%', height: '100%', display: 'flex', flexDirection: 'column', background: '#f0f2f5' },\n    header: { padding: '10px 20px', background: '#fff', boxShadow: '0 2px 4px rgba(0,0,0,0.1)', display: 'flex', alignItems: 'center', justifyContent: 'space-between', zIndex: 1, borderBottom: '1px solid #ddd' },\n    headerTitle: { margin: 0, fontSize: '1.2rem', fontWeight: 'bold', display: 'flex', alignItems: 'center', gap: '10px' },\n    backButton: { background: '#e4e6eb', border: 'none', borderRadius: '20px', padding: '8px 16px', cursor: 'pointer', fontWeight: '600' },\n    chatLog: { flexGrow: 1, overflowY: 'auto', padding: '20px', display: 'flex', flexDirection: 'column' },\n    messageBubble: { maxWidth: '70%', padding: '10px 15px', borderRadius: '18px', marginBottom: '10px', lineHeight: '1.4', boxShadow: '0 1px 1px rgba(0,0,0,0.1)' },\n    messageMeta: { fontSize: '0.75rem', color: '#65676b', marginTop: '5px' },\n    agent1: { alignSelf: 'flex-start', background: '#e4e6eb', color: '#050505' },\n    agent2: { alignSelf: 'flex-end', background: 'linear-gradient(135deg, #6a11cb, #2575fc)', color: '#fff' }\n};\n\nconst AgentChat = ({ onBack }) => {\n    const [conversation, setConversation] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const chatLogRef = useRef(null);\n\n    useEffect(() => {\n        const fetchChat = async () => {\n            try {\n                const res = await fetch('/chat_log.txt');\n                const text = await res.text();\n                setConversation(text);\n                setIsLoading(false);\n            } catch (err) {\n                console.error(\"Error loading chat log:\", err);\n                setIsLoading(false);\n            }\n        };\n\n        fetchChat();\n    }, []);\n\n    useEffect(() => {\n        if (chatLogRef.current) {\n            chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n        }\n    }, [conversation]);\n\n    return (\n        <div style={chatStyles.container}>\n            <header style={chatStyles.header}>\n                <h2 style={chatStyles.headerTitle}><FileText size={24} color=\"#6a11cb\" />Agent Matchmaking Log</h2>\n                <button style={chatStyles.backButton} onClick={onBack}>‚Üê Back to Matches</button>\n            </header>\n            <div style={chatStyles.chatLog} ref={chatLogRef}>\n                {isLoading ? (\n                    <p>Loading conversation...</p>\n                ) : (\n                    conversation.split('\\n').map((line, idx) => (\n                        <div key={idx} style={{ ...chatStyles.messageBubble, ...(line.startsWith(\"user:\") ? chatStyles.agent2 : chatStyles.agent1) }}>\n                            {line.replace(/^user:|^video_director:/, '')}\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AgentChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}